{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PKC (Perfect Kubernetes Cluster)","text":"<p>This repository is a collection of scripts and configurations to create the perfect Kubernetes cluster. Build around a curated list of products and tools from the CNCF landscape.</p> <p>This repository is a work in progress and will be updated regularly.</p> <p>The list of tools and products used are personal preferences and can be changed to fit your needs.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker</li> <li>kubectl</li> <li>helm</li> <li>kind</li> <li>vscode</li> <li>krew</li> <li>homebrew</li> <li>k9s</li> </ul> <p>You can use homebrew to install most of the tools.</p>"},{"location":"#whats-on-the-menu","title":"what's on the menu","text":"<ul> <li>Application Definition &amp; Image Build<ul> <li>Helm</li> <li>Operator Framework</li> <li>KubeVirt</li> </ul> </li> <li> <p>Continuous Integration &amp; Delivery</p> <ul> <li>Argo CD</li> </ul> </li> <li> <p>Database</p> <ul> <li>Crunchy Postgres Operator</li> </ul> </li> <li>Streaming &amp; Messaging<ul> <li>CloudEvents</li> </ul> </li> <li> <p>Scheduling &amp; Orchestration</p> <ul> <li>Knative</li> <li>Kubeflow</li> </ul> </li> <li> <p>Service Mesh</p> <ul> <li>Linkerd</li> </ul> </li> <li> <p>Coordination &amp; Service Discovery</p> <ul> <li>coreDNS</li> </ul> </li> <li> <p>Service Proxy</p> <ul> <li>Nginx</li> </ul> </li> <li> <p>Cloud Native Storage</p> <ul> <li>Longhorn</li> </ul> </li> <li> <p>Cloud Native Network</p> <ul> <li>Cilium</li> </ul> </li> <li> <p>Container Runtime</p> <ul> <li>containerd</li> </ul> </li> <li>Security &amp; Compliance<ul> <li>Cert-Manager</li> <li>Keycloak</li> </ul> </li> <li>Container Registry<ul> <li>Harbor</li> </ul> </li> <li>Observability<ul> <li>Prometheus</li> <li>Grafana</li> <li>Loki</li> <li>Tempo</li> <li>Mimir</li> <li>Pyroscope</li> </ul> </li> </ul>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#steps-to-awesomeness","title":"Steps to awesomeness","text":"<p>Follow the steps below in order :</p> <ul> <li>kind</li> <li>prometheus operator</li> <li>cilium</li> <li>nginx ingress</li> <li>longhorn (incompatible with kind)</li> <li>grafana</li> <li>mimir</li> <li>loki</li> <li>tempo</li> <li>alloy</li> </ul>"},{"location":"capsule/","title":"Index","text":"<pre><code> helm repo add projectcapsule https://projectcapsule.github.io/charts\n helm install capsule projectcapsule/capsule -n capsule-system --create-namespace\n</code></pre>"},{"location":"cert-manager/readme/","title":"Readme","text":"<p>step certificate create root.hbinsight.local ca.crt ca.key --profile root-ca --no-password --insecure</p> <p>curl -sL run.linkerd.io/emojivoto.yml | kubectl apply -f -</p> <p>helm repo add jetstack https://charts.jetstack.io --force-update helm repo update</p> <p>helm install \\   cert-manager jetstack/cert-manager \\   --namespace cert-manager \\   --create-namespace \\   --version v1.14.5 \\   --set installCRDs=true</p> <p>helm upgrade trust-manager jetstack/trust-manager \\   --install \\   --namespace cert-manager \\   --wait</p>"},{"location":"cilium/","title":"build cluster","text":"<pre><code>kind create cluster --config kind-config.yaml --image kindest/node:v1.28.9\n</code></pre>"},{"location":"cilium/#install-cilium","title":"install cilium","text":"<pre><code>helm repo add cilium https://helm.cilium.io/\ndocker pull quay.io/cilium/cilium:v1.15.5\nkind load docker-image quay.io/cilium/cilium:v1.15.5\nhelm upgrade --install --namespace kube-system --repo https://helm.cilium.io cilium cilium --values cilium/cilium.yaml\n\nkubectl -n kube-system rollout restart deployment/cilium-operator\nkubectl -n kube-system rollout restart ds/cilium\n</code></pre>"},{"location":"crts/","title":"Index","text":"<pre><code>step certificate create \"My Root CA\" root-ca.crt root-ca.key --profile root-ca --no-password --insecure\nstep certificate create \"*.apps.edgeprime.intra\" \"*.apps.edgeprime.intra.crt\" \"*.apps.edgeprime.intra.key\" --profile leaf --not-after 8760h --ca ./root-ca.crt --ca-key ./root-ca.key --no-password --insecure\n</code></pre>"},{"location":"eso/","title":"Index","text":"<pre><code>helm repo add external-secrets https://charts.external-secrets.io\n\nhelm upgrade --install external-secrets \\\n   external-secrets/external-secrets \\\n    -n external-secrets \\\n    --create-namespace \\\n  --set installCRDs=true\n</code></pre>"},{"location":"harbor/","title":"Index","text":"<pre><code>helm repo add harbor https://helm.goharbor.io\nhelm repo update\nhelm upgrade --install harbor harbor/harbor --version 1.6.0 --namespace harbor --create-namespace --values harbor/values.yaml\n</code></pre>"},{"location":"ingress/","title":"Ingress","text":"<pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nhelm -n ingress-nginx upgrade --install ingress-nginx ingress-nginx/ingress-nginx --create-namespace --values ingress/values.yaml\n</code></pre> <pre><code># Kind - https://kind.sigs.k8s.io/docs/user/ingress/\ncontroller:\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  hostPort:\n    enabled: true\n  terminationGracePeriodSeconds: 0\n  service:\n    type: NodePort\n  watchIngressWithoutClass: true\n\n  nodeSelector:\n    ingress-ready: \"true\"\n  tolerations:\n    - key: \"node-role.kubernetes.io/master\"\n      operator: \"Equal\"\n      effect: \"NoSchedule\"\n    - key: \"node-role.kubernetes.io/control-plane\"\n      operator: \"Equal\"\n      effect: \"NoSchedule\"\n\n  publishService:\n    enabled: false\n  extraArgs:\n    publish-status-address: localhost\n  allowSnippetAnnotations: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n      additionalLabels:\n        release: prometheus\n</code></pre>"},{"location":"keycloak/","title":"Keycloak","text":"<pre><code>helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm upgrade --install keycloak bitnami/keycloak --version 21.4.1 --namespace keycloak --create-namespace --values keycloak/values.yaml\n</code></pre>"},{"location":"kind/","title":"install kind","text":"<pre><code>brew install kind\n</code></pre>"},{"location":"kind/#build-cluster","title":"build cluster","text":"<pre><code>kind create cluster --config kind/kind-config.yaml  #--image kindest/node:v1.28.9\n</code></pre>"},{"location":"kind/#kind-config","title":"kind config","text":"<pre><code># three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  extraMounts:\n    - hostPath: /home/dotexec/workspace/k8s/kind/roots.pem\n      containerPath: /etc/ssl/certs/roots.pem\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress-ready=true\"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    listenAddress: 127.0.0.1\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    listenAddress: 127.0.0.1\n    protocol: TCP\n- role: worker\n  extraMounts:\n    - hostPath: /home/dotexec/workspace/k8s/kind/roots.pem\n      containerPath: /etc/ssl/certs/roots.pem\n- role: worker\n  extraMounts:\n    - hostPath: /home/dotexec/workspace/k8s/kind/roots.pem\n      containerPath: /etc/ssl/certs/roots.pem\n- role: worker\n  extraMounts:\n    - hostPath: /home/dotexec/workspace/k8s/kind/roots.pem\n      containerPath: /etc/ssl/certs/roots.pem\nnetworking:\n  disableDefaultCNI: true\n  kubeProxyMode: none \n  podSubnet: \"10.10.0.0/16\"\n  serviceSubnet: \"10.11.0.0/16\"\n</code></pre>"},{"location":"kubevirt/","title":"Index","text":""},{"location":"kubevirt/#cdi","title":"CDI","text":"<p>export VERSION=$(curl -s https://api.github.com/repos/kubevirt/containerized-data-importer/releases/latest | grep '\"tag_name\":' | sed -E 's/.\"([^\"]+)\"./\\1/') kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-operator.yaml kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-cr.yaml</p> <p>expose as node port</p>"},{"location":"kubevirt/#kubevirt","title":"KUBEVIRT","text":"<p>export RELEASE=$(curl https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt) kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$RELEASE/kubevirt-operator.yaml kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$RELEASE/kubevirt-cr.yaml kubectl -n kubevirt wait kv kubevirt --for condition=Available</p>"},{"location":"kubevirt/#deploy-cdi-uploadproxy","title":"deploy cdi-uploadproxy","text":"<p>export VERSION=$(curl -s https://api.github.com/repos/kubevirt/containerized-data-importer/releases/latest | grep '\"tag_name\":' | sed -E 's/.\"([^\"]+)\"./\\1/') kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-operator.yaml kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-cr.yaml</p>"},{"location":"kubevirt/#upload-win10-image","title":"UPLOAD WIN10 IMAGE","text":"<p>k virt image-upload \\    --image-path=/home/dotexec/Downloads/Win10.iso \\    --pvc-name=iso-win10 \\    --access-mode=ReadWriteOnce \\    --pvc-size=6G \\    --uploadproxy-url=https://192.168.10.1/ \\    --insecure \\    --wait-secs=240</p>"},{"location":"longhorn/","title":"Longhorn","text":"<pre><code>helm repo add longhorn https://charts.longhorn.io\nhelm repo update\nhelm upgrade --install longhorn longhorn/longhorn --namespace longhorn-system --create-namespace --version 1.6.2 --values values.yaml\nkubectl -n longhorn-system get pod\n</code></pre>"},{"location":"minio/","title":"Index","text":"<pre><code>kubectl krew install minio\nkubectl minio init\nkubectl minio proxy\n</code></pre>"},{"location":"oauth-proxy/","title":"Index","text":"<p>https://stackoverflow.com/questions/75694040/how-to-configure-nginx-ingress-rules-with-keycloak</p>"},{"location":"observability/","title":"Index","text":"<p>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts</p> <p>helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack</p>"},{"location":"observability/alloy/","title":"Install alloy helm charts","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\n# kubectl create namespace observability\n# helm upgrade --install --namespace observability alloy grafana/alloy --values values.yaml\nk apply -f observability/alloy/secret.yaml\nhelm upgrade --install grafana-k8s-monitoring --atomic --timeout 300s  grafana/k8s-monitoring --values observability/alloy/values.yaml --namespace=observability\n</code></pre>"},{"location":"observability/grafana/","title":"Grafana","text":"<pre><code>helm upgrade --install grafana grafana/grafana --namespace=observability --values observability/grafana/values.yaml --create-namespace\nkubectl label namespace observability autocert.step.sm=enabled\n</code></pre>"},{"location":"observability/loki/","title":"Install alloy helm charts","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nkubectl create namespace observability\n# helm upgrade --install --values loki.yaml loki --namespace=observability grafana/loki-stack\nhelm upgrade --install --values observability/loki/values.yaml loki --namespace=observability grafana/loki --create-namespace\n</code></pre>"},{"location":"observability/mimir/","title":"Install alloy helm charts","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nkubectl create namespace observability\n# extract values.yaml\n\nhelm show values grafana/mimir-distributed &gt; values.yaml\n\nhelm upgrade --install mimir --namespace=observability grafana/mimir-distributed --values observability/mimir/values.yaml --create-namespace\n</code></pre>"},{"location":"observability/onCall/","title":"OnCall","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nhelm upgrade --install \\\n    --wait \\\n    oncall \\\n    grafana/oncall --namespace=observability --create-namespace --values  observability/onCall/values.yaml \n</code></pre>"},{"location":"observability/prom-operator/","title":"Prometheus Operator","text":"<pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nhelm upgrade --install prom-operator prometheus-community/prometheus-operator-crds --namespace=observability --create-namespace\n</code></pre>"},{"location":"observability/pyroscope/","title":"Pyroscope","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nhelm upgrade --install pyroscope grafana/pyroscope -f observability/pyroscope/values.yaml --namespace observability --create-namespace\n</code></pre>"},{"location":"observability/tempo/","title":"Tempo","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm upgrade --install tempo grafana/tempo-distributed --values observability/tempo/values.yaml --namespace observability --create-namespace\n</code></pre>"},{"location":"observability/trash/minio/","title":"Index","text":"<pre><code>helm repo add minio-operator https://operator.min.io\nhelm search repo minio-operator\nhelm upgrade --install \\\n  --namespace observability \\\n  --create-namespace \\\n  minio minio-operator/tenant --values values.yaml\n</code></pre>"},{"location":"postgres/","title":"Postgres","text":"<p>git clone https://github.com/CrunchyData/postgres-operator-examples.git</p> <p>helm install $NAME -n $NAMESPACE helm/install</p> <p>helm upgrade --install crunchy-postgres postgres-operator-examples/helm/install --namespace postgres --create-namespace</p> <p>helm upgrade --install crunchy-postgres postgres-operator-examples/helm/install --namespace postgres --create-namespace</p> <p>helm install hippo postgres-operator-examples/helm/postgres --namespace postgres</p>"},{"location":"rancher/","title":"Index","text":"<p>helm repo add rancher-latest https://releases.rancher.com/server-charts/latest helm upgrade --install rancher rancher-latest/rancher \\   --namespace cattle-system \\   --set hostname=rancher.apps.edgeprime.intra \\   --set bootstrapPassword=admin \\   --create-namespace</p> <p>echo \"https://rancher.apps.edgeprime.intra/dashboard/?setup=$(kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}')\"</p>"},{"location":"trash/autocert/","title":"Index","text":"<pre><code>helm repo add smallstep https://smallstep.github.io/helm-charts/\nhelm upgrade --install autocert smallstep/autocert --version 1.19.0 --namespace=smallstep --create-namespace --values values.yaml\n</code></pre> <p>https://smallstep.com/docs/certificate-manager/kubernetes-autocert/#before-you-begin kubectl label namespace default autocert.step.sm=enabled</p>"},{"location":"trust-manager/","title":"Run this command only if you haven't installed cert-manager already","text":"<p>helm install cert-manager jetstack/cert-manager \\   --namespace cert-manager \\   --create-namespace \\   --version v1.15.0 \\   --set crds.enabled=true</p> <p>helm upgrade trust-manager jetstack/trust-manager \\   --install \\   --namespace cert-manager \\   --wait</p>"},{"location":"vault/","title":"Index","text":"<p>helm repo add hashicorp https://helm.releases.hashicorp.com helm search repo hashicorp/vault</p> <p>helm upgrade --install vault hashicorp/vault --version 0.28.0 --namespace vault --create-namespace --values vault/values.yaml</p> <p>vault login token=$(kubectl get secret vault-unseal-keys -o jsonpath=\"{.data.vault-root}\" | base64 --decode)   vault auth enable oidc</p> <p>vault write auth/oidc/config \\       oidc_discovery_url=\"http://keycloak.keycloak/realms/master\" \\       oidc_client_id=\"vault-oauth\" \\       oidc_client_secret=\"\" \\       default_role=\"your-default-role\"</p> <p>vault write auth/oidc/role/your-default-role \\       user_claim=\"sub\" \\       allowed_redirect_uris=\"http://vault.apps.edgeprime.intra/ui/vault/auth/oidc/oidc/callback\" \\       policies=\"policy1,policy2\"</p>"}]}